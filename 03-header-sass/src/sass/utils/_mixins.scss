@use './functions' as *;

// 숨김 콘텐츠
@mixin a11yHidden{
  position: absolute;
  width: rem(1px);
  height: rem(1px);
  margin: rem(-1px);
  clip: rect(0,0,0,0);
  clip-path: polygon(0 0, 0 0, 0 0);
  overflow: hidden;
  padding: 0;
  white-space: nowrap;
  border-width: 0;
} 

// 아이콘
// @include setIcons(icon_social_youtube, rem(24px), '../assets/icon/header');
// 부모한테 
// @extend %icon-center; 넣어줘야합니다.
// %icon-center {
//   display: flex;
//   align-items: center;
//   justify-content: center;
// }
@mixin setIcons($icons, $size: rem(24px), $path: './assets', $fill-color: #121212) {
  @each $name in $icons {
    .#{$name} {
      mask-image: url('#{$path}/#{$name}.svg');
      -webkit-mask-image: url('#{$path}/#{$name}.svg');
      background-color: $fill-color; // svg 컬러
      width: $size;
      height: $size;
      cursor: pointer;
    }
  }
}

// Border Radius
@mixin radius($value){
  @if $value == 'xs'{
    border-radius: 0.25rem;
  } @else if $value == 'sm'{
    border-radius: 0.5rem;
  } @else if $value == 'md'{
    border-radius: 0.75rem;
  } @else if $value == 'lg'{
    border-radius: 1rem;
  } @else if $value == 'xl'{
    border-radius: 1.25rem;
  } @else if $value == 'full'{
    border-radius: 62.5rem;
  } @else{
    border-radius: func.rem($value);
  }
}

// 미디어쿼리 중단점
$tablet: 768px;
$laptop: 1020px;
$desktop: 1400px;

// 미디어쿼리 믹스인
@mixin tablet {
  @media (min-width: #{$tablet}) {
    @content;
  }
}

@mixin laptop {
  @media (min-width: #{$laptop}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop}) {
    @content;
  }
}

// Size (width, inline-size, height, block-size)
@mixin inline-size($value){
  width: $value;
  inline-size: $value;
}
@mixin block-size($value){
  height: $value;
  block-size: $value;
}
@mixin size($width, $height:null){
  @include inline-size($width);
  @if $height != null {
    @include block-size($height);   
  }
}

// Flex Box
@mixin flexbox($direction:row, $wrap:nowrap, $justify:null, $items:null, $gap:null){
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  justify-content: $justify;
  align-items: $items;
  gap: $gap;
}

// 여백 (padding, margin)
@mixin padding-inline-start($value){
  padding-left: $value;
  padding-inline-start: $value;
}
@mixin padding-inline-end($value){
  padding-right: $value;
  padding-inline-end: $value;
}
@mixin padding-block-start($value){
  padding-top: $value;
  padding-block-start: $value;
}
@mixin padding-block-end($value){
  padding-bottom: $value;
  padding-block-end: $value;
}

@mixin paddingX($paddingX){
  @include padding-inline-start($paddingX);
  @include padding-inline-end($paddingX);
}
@mixin paddingY($paddingY){
  @include padding-block-start($paddingY);
  @include padding-block-end($paddingY);
}

@mixin padding($paddingX, $paddingY:null){
  @include paddingX($paddingX);
  @if $paddingY == null {
    @include paddingY($paddingX);
  }@else{
    @include paddingY($paddingY);
  }
}

@mixin margin-inline-start($value){
  margin-left: $value;
  margin-inline-start: $value;
}
@mixin margin-inline-end($value){
  margin-right: $value;
  margin-inline-end: $value;
}
@mixin margin-block-start($value){
  margin-top: $value;
  margin-block-start: $value;
}
@mixin margin-block-end($value){
  margin-bottom: $value;
  margin-block-end: $value;
}

@mixin marginX($marginX){
  @include margin-inline-start($marginX);
  @include margin-inline-end($marginX);
}
@mixin marginY($marginY){
  @include margin-block-start($marginY);
  @include margin-block-end($marginY);
}

@mixin margin($marginX, $marginY:null){
  @include marginX($marginX);
  @if $marginY == null {
    @include marginY($marginX);
  }@else{
    @include marginY($marginY);
  }
}

// Grid Box
@mixin gridbox($column-count, $column-gap: rem(20px), $row-gap: null) {
  $row-gap: if($row-gap == null, $column-gap, $row-gap);

  display: grid;
  grid-template-columns: repeat($column-count, 1fr);
  gap: $row-gap $column-gap;
}

@mixin grid-column-start($number) {
  grid-column-start: $number;
}

@mixin grid-row-start($number) {
  grid-row-start: $number;
}

@mixin grid-column-span($count) {
  grid-column-end: span $count;
}

@mixin grid-row-span($count) {
  grid-row-end: span $count;
}

// Position
@mixin position($position, $offsets: 0) {
  position: $position;
  @if length($offsets) == 1 {
    top: nth($offsets, 1);
    right: nth($offsets, 1);
    bottom: nth($offsets, 1);
    left: nth($offsets, 1);
  } @else if length($offsets) == 2 {
    top: nth($offsets, 1);
    right: nth($offsets, 2);
    bottom: nth($offsets, 1);
    left: nth($offsets, 2);
  } @else if length($offsets) == 3 {
    top: nth($offsets, 1);
    right: nth($offsets, 2);
    bottom: nth($offsets, 3);
    left: nth($offsets, 2);
  } @else if length($offsets) >= 4 {
    top: nth($offsets, 1);
    right: nth($offsets, 2);
    bottom: nth($offsets, 3);
    left: nth($offsets, 4);
  }
}